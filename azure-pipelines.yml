trigger:
  branches:
    include:
      - main  # Only trigger on main for deployments

pr:
  branches:
    include:
      - '*'   # Include all branches for PR validation
    exclude:
      - main  # Exclude main so unit tests don't run on main as a PR

pool:
  vmImage: ubuntu-latest

jobs:
  # Job for building and testing, runs on all PRs except main
  - job: Build_and_Test
    displayName: "Build and Test"
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')  # Exclude main branch
    steps:
      - task: Bash@3
        displayName: "Create .env.local file"
        inputs:
          targetType: 'inline'
          script: |
            echo "NEXT_PUBLIC_BASE_URL=$(NEXT_PUBLIC_BASE_URL)" >> .env.local

      - task: NodeTool@0
        inputs:
          versionSpec: "22.3.0"
        displayName: "Install Node.js"

      - script: |
          npm install
          npm run build
        displayName: "npm install and build"
      - task: Npm@1
        displayName: npm run test
        inputs:
          command: 'custom'
          workingDir: '.'
          customCommand: 'run test:ci'
      - task: PublishTestResults@2
        displayName: 'supply npm test results to pipelines'
        condition: succeededOrFailed() # because otherwise we won't know what tests failed
        inputs:
          testResultsFiles: './junit.xml'
      
      - task: PublishCodeCoverageResults@2
        displayName: 'supply code coverage to pipelines'
        inputs:
          summaryFileLocation: './coverage/clover.xml'

  # Job for deploying to Vercel, only runs after a successful merge into main
  - job: Deploy_to_Vercel
    displayName: "Deploy to Vercel"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    steps:
      - task: vercel-deployment-task@1
        inputs:
          vercelProjectId: 'prj_HlYmw1X08BTJXRu51b8twEu5yV7r'
          vercelOrgId: 'LHQkb1ozqXb9n8IPg9u4pM3w'
          vercelToken: $(VERCEL_TOKEN)
          production: true